version: "3.8"

services:

  db:
    image: postgres:14
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass123
      - POSTGRES_DB=ehua-portal
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  # keycloak:
  #     image: jboss/keycloak:10.0.0
  #     environment:
  #       DB_VENDOR: POSTGRES
  #       DB_ADDR: postgres
  #       DB_DATABASE: ehua-portal
  #       DB_USER: dbuser
  #       DB_PASSWORD: pass123
  #       KEYCLOAK_USER: keycloakadmin
  #       KEYCLOAK_PASSWORD: keycloakpass
        
  #     ports:
  #       - 8180:8080
  #       - 8787:8787
  #     depends_on:
  #       - db

  web-api:
    #restart: always
    build:
      context: .
      dockerfile: fastapi.Dockerfile
    command: bash -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      - DB_URL=postgresql://dbuser:pass123@db/ehua-portal
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  frontend:
    build:
      dockerfile: frontend.Dockerfile
    env_file:
      - ./frontend/.env
    ports:
      - '3000:3000'
    depends_on:
      - mongodb_container

  admin_console:
    build:
      dockerfile: admin.Dockerfile
    env_file:
      - ./admin_console/.env
    ports:
      - '6600:6600'

  mailhog:
      image: mailhog/mailhog
      logging:
          driver: 'none' # disable saving logs
      ports:
          - 1025:1025 # smtp server
          - 8025:8025 # web ui

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - storage-minio:/data
    command: server --address ":9001" --console-address ":9000" /data
    restart: always # necessary since it's failing to start sometimes

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx/nginx.http.config:/etc/nginx/nginx.conf
    #  - ./nginx/certs:/etc/nginx/certs
    ports:
      - "80:80" # fastapi
    #  - "443:443"
    #  - "9000:9000" # minio
    #  - "9001:9001" # minio
    depends_on:
      - web-api
    #  - frontend
    #  - minio

  mongodb_container:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/var/lib/mongo/data/db

 
volumes:
  postgres_data:
  storage-minio:
  mongodb_data_container:
