version: "3.7"

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-03-05T06-32-39Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass123
      - POSTGRES_DB=ehua-portal
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  web-api:
    #restart: always
    build:
      context: .
      dockerfile: fastapi.Dockerfile
    command: bash -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      - DB_URL=postgresql://dbuser:pass123@db/ehua-portal
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
  mailhog:
      image: mailhog/mailhog
      logging:
          driver: 'none' # disable saving logs
      ports:
          - 1025:1025 # smtp server
          - 8025:8025 # web ui
      depends_on:
        - web-api

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - ./minio/data1-1:/data1
      - ./minio/data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ./minio/data2-1:/data1
      - ./minio/data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - ./minio/data3-1:/data1
      - ./minio/data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - ./minio/data4-1:/data1
      - ./minio/data4-2:/data2


  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx/nginx.http.config:/etc/nginx/nginx.conf
    #  - ./nginx/certs:/etc/nginx/certs
    ports:
      - "80:80" # fastapi
    #  - "443:443"
      - "9000:9000" # minio
      - "9001:9001" # minio
    depends_on:
      - web-api
      - minio1
      - minio2
      - minio3
      - minio4
  
volumes:
  postgres_data:
  ## By default this config uses default local driver,
  ## For custom volumes replace with volume driver configuration.
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
